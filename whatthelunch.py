# -*- coding: utf-8 -*-
"""whatthelunch.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RbUuVcdC8UyvNhpS2hMNkkfBCV9_Q6LA
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import openpyxl
import random
import streamlit as st
from datetime import datetime

rootDir = '/content/drive/MyDrive/whatthelunch/'

def recom_restaurant():

  # 스프레드 시트 호출
  store = openpyxl.load_workbook(rootDir + 'ys_store.xlsx')
  sheet_store_lst = store['음식점리스트']
  sheet_visit = store['방문기록']
  sheet_reiview = store['리뷰']

  # ===========================================================================
  # 음식점 리스트 불러오기

  restaurant_lst = []
  for row in sheet_store_lst.iter_rows(min_row=2, values_only=True):
    if row[1]:
      restaurant_lst.append(row[1].strip())

  # ===========================================================================
  # 최근 5회 방문한 음식점 리스트 불러오기
  header = [cell.value for cell in sheet_visit[1][1:]]
  person_name = st.selectbox('이름 선택', header)

  if not person_name:
    st.warning('⚠️이름을 선택해 주세요.')
    return

  full_header = [cell.value for cell in sheet_visit[1]]
  if person_name not in full_header:
    print(f"⚠️ '{person_name}' 이름이 방문기록 시트에 없습니다.")
    return

  cod_idx = full_header.index(person_name)+1
  visit_lst = []

  for row in sheet_visit.iter_rows(min_row=2, values_only=True):
    if row[0]:
      visit_lst.append(row[0])
  recent = visit_lst[-5:]

  st.write(f'최근 {person_name}님의 방문 음식점 : ', recent)

  # ===========================================================================
  # 음식점 랜덤 추천

  # 추천후보 필터링
  candidates = [r for r in restaurant_lst if r not in recent]
  if not candidates:
    st.warning('추천할 음식점이 없습니다. (최근 방문 음식점 제외 기준)')
    return

  if 'recommend_pool' not in st.session_state:
    st.session_state.recommend_pool = candidates.copy()
  if 'current_choice' not in st.session_state:
    st.session_state.current_choice = None

  # 추천 버튼
  if st.button('추천'):
    if not st.session_state.recommend_pool:
      st.warning('추천할 음식점이 없습니다. (최근 방문 음식점 제외 기준)')
    else:
      st.session_state.current_choice = random.choice(st.session_state.recommend_pool)
      st.session_state.recommend_pool.remove(st.session_state.current_choice)

  # 추천 결과
  if st.session_state.current_choice:
    st.success(f"🍽️ 추천 음식점: **{st.session_state.current_choice}**")

    # 선택 버튼
    if st.button('이 음식점으로 선택'):
      today = datetime.today().strftime('%Y-%m-%d')
      next_row = sheet_visit.max_row+1
      sheet_visit.cell(row=next_row, column=1).value = today
      sheet_visit.cell(row=next_row, column=cod_idx).value = st.session_state.current_choice
      store.save(rootDir+'ys_store.xlsx')
      st.success(f"✅ {st.session_state.current_choice} 저장 완료!")

      # 초기화
      del st.session_state.current_choice
      del st.session_state.recommend_pool

  # ===========================================================================
  #










recom_restaurant()

